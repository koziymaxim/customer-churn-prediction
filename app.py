import streamlit as st
import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –æ—Ç—Ç–æ–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤",
    page_icon="üëã",
    layout="wide"
)

# URL FastAPI-—Å–µ—Ä–≤–∏—Å–∞, —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –≤ Docker
API_URL = "http://localhost:8000/predict/"

st.title('–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Ç–æ–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤')
st.write("""
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—Ç–æ–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤.
–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑.
–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ ML-–º–æ–¥–µ–ª–∏, —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–π —Å –ø–æ–º–æ—â—å—é FastAPI –∏ Docker.
""")

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
type_options = {
    '–ï–∂–µ–º–µ—Å—è—á–Ω–æ': 'Month-to-month',
    '–ù–∞ 1 –≥–æ–¥': 'One year',
    '–ù–∞ 2 –≥–æ–¥–∞': 'Two year'
}
payment_options = {
    '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —á–µ–∫': 'Electronic check',
    '–ß–µ–∫ –ø–æ –ø–æ—á—Ç–µ': 'Mailed check',
    '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ (–∞–≤—Ç–æ)': 'Bank transfer (automatic)',
    '–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞ (–∞–≤—Ç–æ)': 'Credit card (automatic)'
}
yes_no_options = { '–î–∞': 'Yes', '–ù–µ—Ç': 'No' }
not_connected_options = {
    '–î–∞': 'Yes',
    '–ù–µ—Ç': 'No',
    '–£—Å–ª—É–≥–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞': 'Not connected'
}

st.sidebar.header('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–ª–∏–µ–Ω—Ç–∞')

inputs = {}


# –í—ã–±–∏—Ä–∞–µ–º —Ä—É—Å—Å–∫–∏–π –∫–ª—é—á
type_choice = st.sidebar.selectbox('–¢–∏–ø –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞', list(type_options.keys()))
inputs['type'] = type_options[type_choice]

payment_choice = st.sidebar.selectbox('–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã', list(payment_options.keys()))
inputs['payment_method'] = payment_options[payment_choice]

inputs['monthly_charges'] = st.sidebar.slider('–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂', min_value=18.0, max_value=120.0, value=70.0, step=0.1)
inputs['begin_date'] = st.sidebar.text_input('–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞', value="2020-01-01")

col1, col2 = st.sidebar.columns(2)
with col1:
    billing_choice = st.sidebar.radio('–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —Å—á–µ—Ç', list(yes_no_options.keys()))
    inputs['paperless_billing'] = yes_no_options[billing_choice]

    partner_choice = st.sidebar.radio('–ù–∞–ª–∏—á–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞', list(yes_no_options.keys()))
    inputs['partner'] = yes_no_options[partner_choice]

    dependents_choice = st.sidebar.radio('–ù–∞–ª–∏—á–∏–µ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤', list(yes_no_options.keys()))
    inputs['dependents'] = yes_no_options[dependents_choice]

    inputs['senior_citizen'] = st.sidebar.radio('–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä', [0, 1], format_func=lambda x: '–î–∞' if x == 1 else '–ù–µ—Ç')

with col2:
    lines_choice = st.sidebar.selectbox('–ù–µ—Å–∫. —Ç–µ–ª. –ª–∏–Ω–∏–π', list(not_connected_options.keys()))
    inputs['multiple_lines'] = not_connected_options[lines_choice]

    security_choice = st.sidebar.selectbox('–û–Ω–ª–∞–π–Ω-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', list(not_connected_options.keys()))
    inputs['online_security'] = not_connected_options[security_choice]

    backup_choice = st.sidebar.selectbox('–û–Ω–ª–∞–π–Ω-—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ', list(not_connected_options.keys()))
    inputs['online_backup'] = not_connected_options[backup_choice]

    protection_choice = st.sidebar.selectbox('–ó–∞—â–∏—Ç–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', list(not_connected_options.keys()))
    inputs['device_protection'] = not_connected_options[protection_choice]

    support_choice = st.sidebar.selectbox('–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞', list(not_connected_options.keys()))
    inputs['tech_support'] = not_connected_options[support_choice]

    tv_choice = st.sidebar.selectbox('–°—Ç—Ä–∏–º–∏–Ω–≥–æ–≤–æ–µ –¢–í', list(not_connected_options.keys()))
    inputs['streaming_tv'] = not_connected_options[tv_choice]

    movies_choice = st.sidebar.selectbox('–°—Ç—Ä–∏–º–∏–Ω–≥ —Ñ–∏–ª—å–º–æ–≤', list(not_connected_options.keys()))
    inputs['streaming_movies'] = not_connected_options[movies_choice]



# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
if st.sidebar.button('üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –æ—Ç—Ç–æ–∫'):
    st.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –º–æ–¥–µ–ª–∏... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–∞—à FastAPI-—Å–µ—Ä–≤–∏—Å
        response = requests.post(API_URL, data=json.dumps(inputs))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
        if response.status_code == 200:
            result = response.json()
            prediction = result['prediction']
            probability = result['churn_probability']

            #  –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            st.subheader('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞:')

            if prediction == 1:
                st.error(f'–ö–ª–∏–µ–Ω—Ç —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —É–π–¥–µ—Ç. –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Ç—Ç–æ–∫–∞: **{probability:.2%}**')
            else:
                st.success(f'–ö–ª–∏–µ–Ω—Ç —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è. –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Ç—Ç–æ–∫–∞: **{probability:.2%}**')

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º JSON, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–æ–¥–µ–ª–∏
            st.write("---")
            st.write("–î–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –º–æ–¥–µ–ª—å (JSON):")
            st.json(inputs)

        else:
            st.error(f"–û—à–∏–±–∫–∞! –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}.")
            st.error("–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:")
            st.json(response.json())

    except requests.exceptions.ConnectionError:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å FastAPI –∑–∞–ø—É—â–µ–Ω.")

st.sidebar.info("–≠—Ç–æ –¥–µ–º–æ-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã ML-–º–æ–¥–µ–ª–∏, —É–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–π –≤ Docker.")